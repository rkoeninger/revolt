;; Analyzed by ClojureScript 0.0-2850
{:defs {vector-diff {:protocol-inline nil, :name flow.dom.diff/vector-diff, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 18, :method-params ([olds news]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/LazySeq clj-nil}, :variadic false, :max-fixed-arity 2}), :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([olds news])), :test true}, do-diff {:protocol-inline nil, :name flow.dom.diff/do-diff, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 14, :method-params ([olds news]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{cljs.core/LazySeq clj-nil}, :variadic false, :max-fixed-arity 2}), :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([olds news])), :test true}, to-diff? {:protocol-inline nil, :name flow.dom.diff/to-diff?, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 15, :method-params ([x1 x2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 2}), :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x1 x2])), :test true}, abs {:protocol-inline nil, :name flow.dom.diff/abs, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, indices {:protocol-inline nil, :name flow.dom.diff/indices, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 14, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj any cljs.core/MetaFn clj-nil}, :variadic false, :max-fixed-arity 1}), :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :test true}, kept-ids {:protocol-inline nil, :name flow.dom.diff/kept-ids, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 15, :method-params ([x1 x2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x1 x2])), :test true}, diff-threshold {:file "resources\\public\\js\\compiled\\out\\flow\\dom\\diff.cljs", :end-column 20, :end-line 4, :column 1, :line 4, :test true, :name flow.dom.diff/diff-threshold}}, :name flow.dom.diff, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {clojure.set clojure.set, set clojure.set}, :imports nil}