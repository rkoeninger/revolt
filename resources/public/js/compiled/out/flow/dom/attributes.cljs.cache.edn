;; Analyzed by ClojureScript 0.0-2850
{:defs {set-classes! {:protocol-inline nil, :name flow.dom.attributes/set-classes!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\attributes.cljs", :end-column 19, :method-params ([$el new-classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el new-classes])), :test true}, set-attr! {:protocol-inline nil, :name flow.dom.attributes/set-attr!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\attributes.cljs", :end-column 16, :method-params ([$el attr value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 3}), :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([$el attr value])), :test true}, set-style! {:protocol-inline nil, :name flow.dom.attributes/set-style!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\attributes.cljs", :end-column 17, :method-params ([$el attr value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 7, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([$el attr value])), :test true}, set-id! {:protocol-inline nil, :name flow.dom.attributes/set-id!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\dom\\attributes.cljs", :end-column 14, :method-params ([$el id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el id])), :test true}}, :name flow.dom.attributes, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {clojure.string clojure.string, s clojure.string}, :imports nil}