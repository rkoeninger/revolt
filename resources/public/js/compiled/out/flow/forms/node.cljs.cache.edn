;; Analyzed by ClojureScript 0.0-2850
{:defs {build-node {:protocol-inline nil, :name flow.forms.node/build-node, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 17, :method-params ([p__25137]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [tag id lifecycle-callbacks], :as node}])), :test true}, update-listeners! {:protocol-inline nil, :name flow.forms.node/update-listeners!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 24, :method-params ([listeners]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([listeners])), :test true}, build-listeners! {:protocol-inline nil, :name flow.forms.node/build-listeners!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 23, :method-params ([$el listeners]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el listeners])), :test true}, update-children! {:protocol-inline nil, :name flow.forms.node/update-children!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 23, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children])), :test true}, with-child-holders {:protocol-inline nil, :name flow.forms.node/with-child-holders, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 25, :method-params ([$parent children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 2}), :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$parent children])), :test true}, update-classes! {:protocol-inline nil, :name flow.forms.node/update-classes!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 22, :method-params ([$el classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil cljs.core/LazySeq clj-nil}, :variadic false, :max-fixed-arity 2}), :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el classes])), :test true}, update-styles! {:protocol-inline nil, :name flow.forms.node/update-styles!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 21, :method-params ([$el styles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el styles])), :test true}, update-attrs! {:protocol-inline nil, :name flow.forms.node/update-attrs!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\forms\\node.cljs", :end-column 20, :method-params ([$el attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$el attrs])), :test true}}, :name flow.forms.node, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {fde flow.dom.elements, flow.dom.elements flow.dom.elements, fdc flow.dom.children, flow.dom.children flow.dom.children, flow.dom.attributes flow.dom.attributes, fda flow.dom.attributes}, :imports nil}