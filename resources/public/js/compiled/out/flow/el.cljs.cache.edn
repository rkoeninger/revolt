;; Analyzed by ClojureScript 0.0-2850
{:defs {render-el {:protocol-inline nil, :name flow.el/render-el, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\el.cljs", :end-column 16, :method-params ([build-el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([build-el])), :test true}, root {:protocol-inline nil, :name flow.el/root, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\el.cljs", :end-column 11, :method-params ([$container el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([$container el])), :test true}, update-watches! {:protocol-inline nil, :name flow.el/update-watches!, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\el.cljs", :end-column 22, :method-params ([p__25532]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [old-deps new-deps on-change watch-id]}])), :test true}}, :name flow.el, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {set clojure.set, fs flow.state, fc flow.cursors, fr flow.render, flow.dom.elements flow.dom.elements, flow.deps flow.deps, fd flow.deps, flow.dom.children flow.dom.children, clojure.set clojure.set, fdc flow.dom.children, flow.render flow.render, flow.state flow.state, fde flow.dom.elements, flow.cursors flow.cursors}, :imports nil}