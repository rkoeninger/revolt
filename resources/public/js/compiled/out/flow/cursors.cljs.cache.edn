;; Analyzed by ClojureScript 0.0-2850
{:defs {cursor? {:protocol-inline nil, :name flow.cursors/cursor?, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :test true}, Cursor {:protocol-symbol true, :name flow.cursors/Cursor, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 20, :column 1, :line 10, :protocol-info {:methods {-value [[_]], -!state [[_]], -path [[_]], ->atom [[_ extra-path]]}}, :info nil, :end-line 10, :impls #{flow.cursors/t24964 flow.cursors/t24958 flow.cursors/t24971 flow.cursors/x24981 flow.cursors/t24955 flow.cursors/x24980 flow.cursors/t24975 flow.cursors/t24952}, :test true}, map-cursor {:protocol-inline nil, :name flow.cursors/map-cursor, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 17, :method-params ([value !state path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag flow.cursors/t24964, :variadic false, :max-fixed-arity 3}), :line 172, :end-line 172, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value !state path])), :test true}, cloneable->cursor {:protocol-inline nil, :name flow.cursors/cloneable->cursor, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 24, :method-params ([value !state path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj, :variadic false, :max-fixed-arity 3}), :line 389, :end-line 389, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value !state path])), :test true}, t24958 {:num-fields 5, :protocols #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name flow.cursors/t24958, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 3, :line 173, :record false, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->cursor {:protocol-inline nil, :name flow.cursors/->cursor, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 15, :method-params ([value !state path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj flow.cursors/t24964 any}, :variadic false, :max-fixed-arity 3}), :line 404, :end-line 404, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value !state path])), :test true}, Keyable {:protocol-symbol true, :name flow.cursors/Keyable, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 21, :column 1, :line 16, :protocol-info {:methods {-keyed-by [[_ f]]}}, :info nil, :end-line 16, :impls #{flow.cursors/t24971 flow.cursors/t24975}, :test true}, ->t24952 {:protocol-inline nil, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta}, :name flow.cursors/->t24952, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([path !state cursor->atom meta24953]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag flow.cursors/t24952, :variadic false, :max-fixed-arity 4}), :line 82, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path !state cursor->atom meta24953])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}, t24971 {:num-fields 7, :protocols #{cljs.core/IIndexed flow.cursors/Keyable cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name flow.cursors/t24971, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 5, :line 303, :record false, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}}, assoc-at-path {:protocol-inline nil, :name flow.cursors/assoc-at-path, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 20, :method-params ([m p__24934 v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil cljs.core/Cons clj any cljs.core/MetaFn clj-nil}, :variadic false, :max-fixed-arity 3}), :line 40, :end-line 40, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m [p & more-path :as path] v])), :test true}, t24964 {:num-fields 5, :protocols #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name flow.cursors/t24964, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 3, :line 173, :record false, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, -keyed-by {:protocol-inline nil, :protocol flow.cursors/Keyable, :name flow.cursors/-keyed-by, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 13, :method-params ([_ f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 16, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ f])), :test true}, t24955 {:num-fields 4, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta}, :name flow.cursors/t24955, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 3, :line 82, :record false, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta}}, ->t24975 {:protocol-inline nil, :protocols #{cljs.core/IIndexed flow.cursors/Keyable cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name flow.cursors/->t24975, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([pk key-fn path !state value vec-cursor meta24976]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag flow.cursors/t24975, :variadic false, :max-fixed-arity 7}), :line 303, :max-fixed-arity 7, :fn-var true, :arglists (quote ([pk key-fn path !state value vec-cursor meta24976])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :test true}, get-at-path {:protocol-inline nil, :name flow.cursors/get-at-path, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 18, :method-params ([m p__24925]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m [p & more-path :as path]])), :test true}, cursor->atom {:protocol-inline nil, :name flow.cursors/cursor->atom, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 19, :method-params ([!state path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag flow.cursors/t24955, :variadic false, :max-fixed-arity 2}), :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([!state path])), :test true}, ->t24964 {:protocol-inline nil, :protocols #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name flow.cursors/->t24964, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([path !state value map-cursor meta24965]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag flow.cursors/t24964, :variadic false, :max-fixed-arity 5}), :line 173, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path !state value map-cursor meta24965])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :test true}, ->atom {:protocol-inline nil, :protocol flow.cursors/Cursor, :name flow.cursors/->atom, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 10, :method-params ([_ extra-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 10, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ extra-path])), :test true}, vec-cursor {:protocol-inline nil, :name flow.cursors/vec-cursor, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 17, :method-params ([value !state path key-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 4}), :line 298, :end-line 298, :max-fixed-arity 4, :fn-var true, :arglists (quote ([value !state path key-fn])), :test true}, -!state {:protocol-inline nil, :protocol flow.cursors/Cursor, :name flow.cursors/-!state, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 10, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :test true}, t24975 {:num-fields 7, :protocols #{cljs.core/IIndexed flow.cursors/Keyable cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name flow.cursors/t24975, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 5, :line 303, :record false, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}}, -path {:protocol-inline nil, :protocol flow.cursors/Cursor, :name flow.cursors/-path, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 10, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :test true}, keyed-by {:protocol-inline nil, :name flow.cursors/keyed-by, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 15, :method-params ([f coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any cljs.core/LazySeq clj-nil}, :variadic false, :max-fixed-arity 2}), :line 416, :end-line 416, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f coll])), :test true}, ->t24958 {:protocol-inline nil, :protocols #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name flow.cursors/->t24958, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([path !state value map-cursor meta24959]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag flow.cursors/t24958, :variadic false, :max-fixed-arity 5}), :line 173, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path !state value map-cursor meta24959])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :test true}, -value {:protocol-inline nil, :protocol flow.cursors/Cursor, :name flow.cursors/-value, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 10, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :test true}, t24952 {:num-fields 4, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta}, :name flow.cursors/t24952, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :type true, :anonymous true, :column 3, :line 82, :record false, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta}}, ->t24971 {:protocol-inline nil, :protocols #{cljs.core/IIndexed flow.cursors/Keyable cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :name flow.cursors/->t24971, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([pk key-fn path !state value vec-cursor meta24972]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag flow.cursors/t24971, :variadic false, :max-fixed-arity 7}), :line 303, :max-fixed-arity 7, :fn-var true, :arglists (quote ([pk key-fn path !state value vec-cursor meta24972])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/ISequential cljs.core/IWithMeta cljs.core/IAssociative cljs.core/ILookup}, :test true}, ->t24955 {:protocol-inline nil, :protocols #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter flow.cursors/Cursor cljs.core/IWithMeta}, :name flow.cursors/->t24955, :variadic false, :file "resources\\public\\js\\compiled\\out\\flow\\cursors.cljs", :method-params ([path !state cursor->atom meta24956]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag flow.cursors/t24955, :variadic false, :max-fixed-arity 4}), :line 82, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path !state cursor->atom meta24956])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta}, :test true}}, :name flow.cursors, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil}